{
  "/accounts/{name}[type=user].accountCreationDate": "Account creation date.",
  "/accounts/{name}[type=user].accountEncryptMode": "Account entities support repository encryption mode. There are two possible options for the encryptMode - 'ENABLED' and 'UNSPECIFIED'.\nWhen 'ENABLED' is set then repository encryption for the account is enabled.\nWhen 'UNSPECIFIED' is set then repository encryption for the account is not enabled and can be specified with EncryptClass.\n",
  "/accounts/{name}[type=user].additionalAttributes": "Additional attributes which are defined with \"key\": \"value\" pairs. Keys should follow the pattern: [a-zA-Z0-9_.]+\nand have length between 10 and 255 characters. Key should not start with \"userVars.\", since it is\na reserved word. Both key and value cannot be blank.\n",
  "/accounts/{name}[type=user].authByEmail": "This property defines if authentication by email address is allowed for this account",
  "/accounts/{name}[type=user].businessUnit": "The business unit that account belongs to.",
  "/accounts/{name}[type=user].disabled": "This property defines if this account is disabled. If the account is disabled: 1) Subscriptions for the account will not trigger. ; 2) Users associated with the account will not be able to login and perform any transfers\n",
  "/accounts/{name}[type=user].gid": "The numeric group ID of the account",
  "/accounts/{name}[type=user].homeFolder": "The home folder on the local system used for this account. The folder path name must be a valid absolute directory name\n",
  "/accounts/{name}[type=user].id": "The unique identifier of the account.",
  "/accounts/{name}[type=user].isUnlicensedUserAllowedToReply": "This property defines if the unlicensed user may reply to packages.",
  "/accounts/{name}[type=user].loginRestrictionPolicy": "The login restriction policy for this account.",
  "/accounts/{name}[type=user].managedByCG": "This property indicates whether the account is managed by Central Governance.",
  "/accounts/{name}[type=user].mappedUser": "The name of the real user mapped to this account for SecureTransport installation running on Windows environment.",
  "/accounts/{name}[type=user].name": "The account name",
  "/accounts/{name}[type=user].notes": "An unstructured comments to the account",
  "/accounts/{name}[type=user].pesitId": "This property defines the PeSIT ID which is used for defining a PeSIT partnership.",
  "/accounts/{name}[type=user].routingMode": "Accounts support PeSIT Store and Forward mode via property named 'routingMode'. There are three possible options for the routingMode: accept (the value for Routing Mode that accept transfers), reject (the value for Routing Mode that reject transfers) and ignore (the value for Routing Mode that ignores transfers). By default is 'reject'.\n",
  "/accounts/{name}[type=user].skin": "The skin templates",
  "/accounts/{name}[type=user].subscriptionFolderDiscovery": "For accounts with multiple subscriptions, the number of subscriptions and the target folder depth would impact performance.\nThere are two possible options for the subscriptionFolderDiscovery - 'ITERATIVE' and 'RECURSIVE'.\nWhen 'ITERATIVE' is set, then subscription folder discovery is performed by iteration over all of the account's subscriptions while trying to match the target folder. Should be used when the number of subscriptions is small and the target folder depth is large.\nWhen 'RECURSIVE' is set, then subscription folder discovery is performed by recursive traversal of the target folder hierarchy - the target folder is checked first, then moving up to parent folders. Should be used when the number of subscriptions is large and the target folder depth is small.\nThe default value is 'ITERATIVE'.\n",
  "/accounts/{name}[type=user].transferType": "This property is an attribute name to indicate the transfer type of the account's transfer site. It can be unspecified (N), internal (I), partner(E). By default is unspecified.\n",
  "/accounts/{name}[type=user].transfersWebServiceAllowed": "This property is an attribute name to indicate whether access to the transfers resource from the end user RESTful API is allowed.\n",
  "/accounts/{name}[type=user].type": "\u003cnil\u003e",
  "/accounts/{name}[type=user].uid": "The numeric user ID of the account. Required for SecureTransport installation running on UNIX environment.",
  "/accounts/{name}[type=user].user.failedAuthAttempts": "The number of sequential failed authentication attempts",
  "/accounts/{name}[type=user].user.lastFailedAuth": "The time of the last unsuccessful authentication attempt. The time is in RFC 2822 format - EEE, d MMM yyyy HH:mm:ss Z. Note: This property is read only property. Secure Transport server sets that property on failed user login.\n",
  "/accounts/{name}[type=user].user.name": "The name of the user (the login name)",
  "/accounts/{name}[type=user].user.passwordCredentials.forcePasswordChange": "Checks if password change is forced",
  "/accounts/{name}[type=user].user.passwordCredentials.password": "The password. If the password property is not set then the passwordDigest property must be set and vice versa\n",
  "/accounts/{name}[type=user].user.passwordCredentials.passwordDigest": "The password digest. If the passwordDigest property is not set then the password property must be set and vice versa\n",
  "/businessUnits/{name}.additionalAttributes": "Additional attributes which are defined with \"key\": \"value\" pairs. Keys must start with \"userVars.\" prefix, follow the pattern: [a-zA-Z0-9_.]+\nand have length between 10 and 255 characters (including the prefix). Non prefixed part of key should not start with \"userVars.\", since it is\na reserved word. Both key and value cannot be blank.\n",
  "/businessUnits/{name}.baseFolder": "The base folder of the business unit entity.",
  "/businessUnits/{name}.baseFolderModifyingAllowed": "Flag indicating if the base folder of the business unit entity is modifiable (this property defines whether the base folder for the belonging accounts may be modified).\n",
  "/businessUnits/{name}.businessUnitHierarchy": "The full path hierarchy of the business unit entity.",
  "/businessUnits/{name}.dmz": "The name of the DMZ zone",
  "/businessUnits/{name}.enabledIcapServers.#": "\u003cnil\u003e",
  "/businessUnits/{name}.homeFolderModifyingAllowed": "Flag indicating if the belonging accounts' base folders are modifiable.",
  "/businessUnits/{name}.managedByCG": "This property indicates whether the business unit is managed by Central Governance.",
  "/businessUnits/{name}.name": "The unique name of the business unit entity.",
  "/businessUnits/{name}.parent": "The name of the parent business unit entity.",
  "/businessUnits/{name}.sharedFoldersCollaborationAllowed": "Flag indicating if accounts may collaborate using, creating and sharing folders.\n",
  "/certificates/{id}.accessLevel": "The access level to this certificate for other accounts.",
  "/certificates/{id}.account": "The account, the certificate owner.",
  "/certificates/{id}.additionalAttributes": "Additional attributes which are defined with \"key\": \"value\" pairs. Keys must start with \"userVars.\" prefix, follow the pattern: [a-zA-Z0-9_.]+\nand have length between 10 and 255 characters (including the prefix). Non prefixed part of key should not start with \"userVars.\", since it is\na reserved word. Both key and value cannot be blank.\n",
  "/certificates/{id}.creationTime": "The creation time of the certificate entity in Unix Timestamp format.",
  "/certificates/{id}.expirationTime": "The certificate expiration time in Unix Timestamp format. This is a read only property and it is automatically calculated depending on the 'validityPeriod' property\n",
  "/certificates/{id}.fingerprint": "The certificate fingerprint. This is a auto generating read only property.",
  "/certificates/{id}.id": "The ID of the certificate entity.",
  "/certificates/{id}.issuer": "The issuer of the certificate. This is a auto generating read only property.",
  "/certificates/{id}.keyAlgorithm": "The name of the algorithm for generated key. Only for certificate entities of type 'pgp' this property can be set (for certificate entities of type 'x509' this property is automatically being set to 'RSA' when generate a 'x509' certificate.\n",
  "/certificates/{id}.keySize": "The size of the key. Valid values are: 1024, 2048, 3072, 4096. For PGP keys the value applies to the master key.\n",
  "/certificates/{id}.name": "The name of the certificate.",
  "/certificates/{id}.overwrite": "Define whether to overwrite the certificate if a certificate with the same name, type and usage already exists.",
  "/certificates/{id}.password": "The private key password.",
  "/certificates/{id}.serialNumber": "The serial number. This is a auto generating read only property.",
  "/certificates/{id}.signAlgorithm": "The certificate signature algorithm as string",
  "/certificates/{id}.subject": "The the certificate subject DN (distinguished name) in RFC2253 format. Example: 'CN=test,OU=Axway_TT,O=Axway,L=Sofia,ST=Sofia,C=Bulgaria'.\n",
  "/certificates/{id}.type": "The type of the certificate entity as string.",
  "/certificates/{id}.usage": "The usage of the certificate entity as string.",
  "/certificates/{id}.validationStatus": "The certificate validation status.",
  "/certificates/{id}.validityPeriod": "The certificate validity in days.",
  "/certificates/{id}.version": "The certificate version.",
  "/configurations/fileArchiving.archiveFolder": "Archive folder.",
  "/configurations/fileArchiving.deleteFilesOlderThan": "Delete files older than x days.",
  "/configurations/fileArchiving.deleteFilesOlderThanUnit": "Retention period unit.",
  "/configurations/fileArchiving.encryptionCertificate": "Encryption certificate.",
  "/configurations/fileArchiving.globalArchivingPolicy": "Global archiving policy.",
  "/configurations/fileArchiving.isEnabled": "Whether file archiving is enabled.",
  "/configurations/fileArchiving.maximumFileSizeAllowedToArchive": "Maximum allowed file size to archive.",
  "/configurations/options/{name}.composite": "Define if the configuration option is composite.",
  "/configurations/options/{name}.description": "The description of the configuration option entity.",
  "/configurations/options/{name}.disabled": "Define if the configuration option is disabled.",
  "/configurations/options/{name}.encrypted": "Define if the configuration option value is encrypted.",
  "/configurations/options/{name}.isLocal": "Define if the configuration option value is local.",
  "/configurations/options/{name}.name": "The name of the configuration option entity.",
  "/configurations/options/{name}.readOnly": "Define if the configuration option value can be modified.",
  "/configurations/options/{name}.specified": "Define if the configuration option value is specified.",
  "/configurations/sentinel.enabled": "Whether the reporting to Axway Sentinel is enabled.",
  "/configurations/sentinel.fipsEnabled": "Enables the communication between SecureTransport and Axway Sentinel in a mode that is fully compliant with FIPS 140-2. This setting overrides the AxwaySentinel.SecureConnection.Protocol and AxwaySentinel.SecureConnection.EnabledCipherSuites.",
  "/configurations/sentinel.heartbeatDelay": "Time between the heartbeat messages.",
  "/configurations/sentinel.heartbeatEnabled": "If true the SecureTransport server sends a message to the Axway Sentinel server to tell it that SecureTransport is alive and connected.",
  "/configurations/sentinel.heartbeatTimeUnit": "Time unit for the time between the heartbeat messages.",
  "/configurations/sentinel.host": "The IP address of the remote Axway Sentinel host.",
  "/configurations/sentinel.overflowFilePath": "File path to the file where SecureTransport writes events in case it cannot connect to Axway Sentinel.",
  "/configurations/sentinel.overflowFilePolicy": "Possible values (ignore - Stops Collecting New Events | stop - Pauses All File Transfers Sent From and Received by SecureTransport). The default value is ignore.",
  "/configurations/sentinel.overflowFileSize": "Maximum size of overflow file in MB.",
  "/configurations/sentinel.overflowFileThreshold": "Represents the percent of file size at which warnings are sent.",
  "/configurations/sentinel.port": "Port of the remote Axway Sentinel host.",
  "/configurations/sentinel.shouldPersistLinkData": "If true SecureTransport server will maintain link data when reporting is disabled.",
  "/configurations/sentinel.shouldVerifyCert": "Whether the SecureTransport server to check the validity, trust status and hostname of the certificate presented by Axway Sentinel server upon establishing connection. If it is “false”, connections could be established even if the certificate is expired or the certificate attributes are not correct.",
  "/configurations/sentinel.useSecureConnection": "Whether SecureTransport server should send messages to the Sentinel server over a secure channel.",
  "/routes/{id}.account": "The account where the route is subscribed",
  "/routes/{id}.additionalAttributes": "Additional attributes which are defined with \"key\": \"value\" pairs. Keys must start with \"userVars.\" prefix, follow the pattern: [a-zA-Z0-9_.]+\nand have length between 10 and 255 characters (including the prefix). Non prefixed part of key should not start with \"userVars.\", since it is\na reserved word. Both key and value cannot be blank.\n",
  "/routes/{id}.businessUnits.#": "\u003cnil\u003e",
  "/routes/{id}.condition": "An expression for route execution when conditionType is EL.",
  "/routes/{id}.conditionType": "For routes of type TEMPLATE or COMPOSITE, the property determines whether all SIMPLE routes that\nmatch their conditions will be executed or just the first one.\n\nFor routes of type SIMPLE, the property determines if the route gets executed always or based on the condition,\nspecified in the condition property using expression language.\n",
  "/routes/{id}.description": "Route description",
  "/routes/{id}.failureEmailName": "E-mail Notifications on route failure",
  "/routes/{id}.failureEmailNotification": "Notify following e-mails on route failure.",
  "/routes/{id}.failureEmailTemplate": "Notification template name on route failure",
  "/routes/{id}.id": "Route Id",
  "/routes/{id}.managedByCG": "This property indicates whether the route is managed by Central Governance.",
  "/routes/{id}.name": "Route name",
  "/routes/{id}.routeTemplate": "In COMPOSITE route this is the id of an existing template route visible by the account this route is created for",
  "/routes/{id}.steps.#.[type=CharactersReplace].actionOnStepFailure": "Action on step failure. If set to PROCEED, the route execution will continue even if the step execution fails.",
  "/routes/{id}.steps.#.[type=CharactersReplace].actionOnStepSuccess": "Action on step success. Defines if the route will continue after the step success.",
  "/routes/{id}.steps.#.[type=CharactersReplace].condition": "An expression for step execution when conditionType is EL.",
  "/routes/{id}.steps.#.[type=CharactersReplace].conditionType": "Defines whether the step is executed always or based on a condition, specified in the condition property using expression language.",
  "/routes/{id}.steps.#.[type=CharactersReplace].fileFilterExpression": "File name or file name expression. It is used with the file filter expression property.",
  "/routes/{id}.steps.#.[type=CharactersReplace].fileFilterExpressionType": "File filter expression type.",
  "/routes/{id}.steps.#.[type=CharactersReplace].findCharacterSequence": "Find character sequence, example: q123\n",
  "/routes/{id}.steps.#.[type=CharactersReplace].id": "Route step Id.",
  "/routes/{id}.steps.#.[type=CharactersReplace].inputCharset": "Specify the source file encoding. Example: UTF-8\n",
  "/routes/{id}.steps.#.[type=CharactersReplace].lineStrip": "Line strip enablement. Use value \"stripEnabled\" to enable line strip. Other value will disable the line strip.",
  "/routes/{id}.steps.#.[type=CharactersReplace].outputCharset": "Specify output file encoding. If not specified, source file encoding is used.",
  "/routes/{id}.steps.#.[type=CharactersReplace].postTransformationActionRenameAsExpression": "Post transformation action rename expression for step.",
  "/routes/{id}.steps.#.[type=CharactersReplace].replaceCharacterSequence": "Specify replace character sequence. Unicode notation (\\uXXXX) can be used. Multiple replace character sequences separated with a comma (,) can be specified. Comma must be Unicode encoded (\\002c) if used in the replace sequence.\n",
  "/routes/{id}.steps.#.[type=CharactersReplace].status": "Route step status.",
  "/routes/{id}.steps.#.[type=CharactersReplace].type": "Route step type. ExecuteRoute step links the routes of type TEMPLATE and SIMPLE. The next steps are used with SIMPLE route type.",
  "/routes/{id}.steps.#.[type=Compress].actionOnStepFailure": "Action on step failure. If set to PROCEED, the route execution will continue even if the step execution fails.",
  "/routes/{id}.steps.#.[type=Compress].actionOnStepSuccess": "Action on step success. Defines if the route will continue after the step success.",
  "/routes/{id}.steps.#.[type=Compress].compressionLevel": "Compression level.",
  "/routes/{id}.steps.#.[type=Compress].compressionType": "Compression type.",
  "/routes/{id}.steps.#.[type=Compress].condition": "An expression for step execution when conditionType is EL.",
  "/routes/{id}.steps.#.[type=Compress].conditionType": "Defines whether the step is executed always or based on a condition, specified in the condition property using expression language.",
  "/routes/{id}.steps.#.[type=Compress].fileFilterExpression": "File name or file name expression. It is used with the file filter expression property.",
  "/routes/{id}.steps.#.[type=Compress].fileFilterExpressionType": "File filter expression type.",
  "/routes/{id}.steps.#.[type=Compress].id": "Route step Id.",
  "/routes/{id}.steps.#.[type=Compress].postTransformationActionRenameAsExpression": "Post transformation action rename expression for compress step.",
  "/routes/{id}.steps.#.[type=Compress].singleArchiveEnabled": "Enable single file archiving.",
  "/routes/{id}.steps.#.[type=Compress].singleArchiveName": "Archive name or expression. Not used with compression type GZIP. Example: archive-${timestamp}.zip.\n",
  "/routes/{id}.steps.#.[type=Compress].status": "Route step status.",
  "/routes/{id}.steps.#.[type=Compress].type": "Route step type. ExecuteRoute step links the routes of type TEMPLATE and SIMPLE. The next steps are used with SIMPLE route type.",
  "/routes/{id}.steps.#.[type=Compress].zipPassword": "Zip file password. Used with compression type ZIP only.",
  "/routes/{id}.steps.#.[type=Decompress].actionOnStepFailure": "Action on step failure. If set to PROCEED, the route execution will continue even if the step execution fails.",
  "/routes/{id}.steps.#.[type=Decompress].actionOnStepSuccess": "Action on step success. Defines if the route will continue after the step success.",
  "/routes/{id}.steps.#.[type=Decompress].condition": "An expression for step execution when conditionType is EL.",
  "/routes/{id}.steps.#.[type=Decompress].conditionType": "Defines whether the step is executed always or based on a condition, specified in the condition property using expression language.",
  "/routes/{id}.steps.#.[type=Decompress].fileFilterExpression": "File name or file name expression. It is used with the file filter expression property.",
  "/routes/{id}.steps.#.[type=Decompress].fileFilterExpressionType": "File filter expression type.",
  "/routes/{id}.steps.#.[type=Decompress].filenameCollisionResolutionType": "Action on file name collision.",
  "/routes/{id}.steps.#.[type=Decompress].id": "Route step Id.",
  "/routes/{id}.steps.#.[type=Decompress].postTransformationActionRenameAsExpression": "Post transformation action rename expression for decompress step.",
  "/routes/{id}.steps.#.[type=Decompress].status": "Route step status.",
  "/routes/{id}.steps.#.[type=Decompress].type": "\u003cnil\u003e",
  "/routes/{id}.steps.#.[type=Decompress].zipPassword": "Zip file password. Do not use the property if it is not needed in the step flow.",
  "/routes/{id}.steps.#.[type=EncodingConversion].actionOnStepFailure": "Action on step failure. If set to PROCEED, the route execution will continue even if the step execution fails.",
  "/routes/{id}.steps.#.[type=EncodingConversion].actionOnStepSuccess": "Action on step success. Defines if the route will continue after the step success.",
  "/routes/{id}.steps.#.[type=EncodingConversion].condition": "An expression for step execution when conditionType is EL.",
  "/routes/{id}.steps.#.[type=EncodingConversion].conditionType": "Defines whether the step is executed always or based on a condition, specified in the condition property using expression language.",
  "/routes/{id}.steps.#.[type=EncodingConversion].fileFilterExpression": "File name or file name expression. It is used with the file filter expression property.",
  "/routes/{id}.steps.#.[type=EncodingConversion].fileFilterExpressionType": "File filter expression type.",
  "/routes/{id}.steps.#.[type=EncodingConversion].id": "Route step Id.",
  "/routes/{id}.steps.#.[type=EncodingConversion].inputCharset": "Specify the source file encoding.",
  "/routes/{id}.steps.#.[type=EncodingConversion].outputCharset": "Specify output file encoding. If not specified, source file encoding is used.",
  "/routes/{id}.steps.#.[type=EncodingConversion].postTransformationActionRenameAsExpression": "Post transformation action rename expression.",
  "/routes/{id}.steps.#.[type=EncodingConversion].status": "Route step status.",
  "/routes/{id}.steps.#.[type=EncodingConversion].type": "Route step type. ExecuteRoute step links the routes of type TEMPLATE and SIMPLE. The next steps are used with SIMPLE route type.",
  "/routes/{id}.steps.#.[type=ExecuteRoute].executeRoute": "SIMPLE route id.",
  "/routes/{id}.steps.#.[type=ExecuteRoute].status": "Route step status.",
  "/routes/{id}.steps.#.[type=ExecuteRoute].type": "\u003cnil\u003e",
  "/routes/{id}.steps.#.[type=ExternalScript].actionOnStepFailure": "Action on step failure. If set to PROCEED, the route execution will continue even if the step execution fails.",
  "/routes/{id}.steps.#.[type=ExternalScript].actionOnStepSuccess": "Action on step success. Defines if the route will continue after the step success.",
  "/routes/{id}.steps.#.[type=ExternalScript].condition": "An expression for step execution when conditionType is EL.",
  "/routes/{id}.steps.#.[type=ExternalScript].conditionType": "Defines whether the step is executed always or based on a condition, specified in the condition property using expression language.",
  "/routes/{id}.steps.#.[type=ExternalScript].id": "Route step Id.",
  "/routes/{id}.steps.#.[type=ExternalScript].logOutput": "The script will genarate standard output to Server log.",
  "/routes/{id}.steps.#.[type=ExternalScript].rootExecution": "Root execution property for external script.",
  "/routes/{id}.steps.#.[type=ExternalScript].scriptPath": "String or expression with an absolute path to external script. Example: For Unix environment: /usr /bin/env bash -c ${FILEDRIVEHOME}/bin/agents/example.sh For Windows environment: cmd /c ${FILEDRIVEHOME}\\bin\\agents\\example.bat\n",
  "/routes/{id}.steps.#.[type=ExternalScript].status": "Route step status.",
  "/routes/{id}.steps.#.[type=ExternalScript].type": "\u003cnil\u003e",
  "/routes/{id}.steps.#.[type=LineEnding].actionOnStepFailure": "Action on step failure. If set to PROCEED, the route execution will continue even if the step execution fails.",
  "/routes/{id}.steps.#.[type=LineEnding].actionOnStepSuccess": "Action on step success. Defines if the route will continue after the step success.",
  "/routes/{id}.steps.#.[type=LineEnding].condition": "An expression for step execution when conditionType is EL.",
  "/routes/{id}.steps.#.[type=LineEnding].conditionType": "Defines whether the step is executed always or based on a condition, specified in the condition property using expression language.",
  "/routes/{id}.steps.#.[type=LineEnding].fileFilterExpression": "File name or file name expression. It is used with the file filter expression property.",
  "/routes/{id}.steps.#.[type=LineEnding].fileFilterExpressionType": "File filter expression type.",
  "/routes/{id}.steps.#.[type=LineEnding].id": "Route step Id.",
  "/routes/{id}.steps.#.[type=LineEnding].inputCharset": "Specify the source file encoding. Example: UTF-8 \\n\n",
  "/routes/{id}.steps.#.[type=LineEnding].inputEolSequence": "Input EOL sequence. Example: \\r\\n\n",
  "/routes/{id}.steps.#.[type=LineEnding].outputCharset": "Specify output file encoding. If not specified, source file encoding is used.",
  "/routes/{id}.steps.#.[type=LineEnding].outputEolSequence": "Output EOL sequence. Example: \\r\\n\n",
  "/routes/{id}.steps.#.[type=LineEnding].postTransformationActionRenameAsExpression": "Post transformation action rename expression for line ending step.",
  "/routes/{id}.steps.#.[type=LineEnding].status": "Route step status.",
  "/routes/{id}.steps.#.[type=LineEnding].type": "\u003cnil\u003e",
  "/routes/{id}.steps.#.[type=LineFolding].actionOnStepFailure": "Action on step failure. If set to PROCEED, the route execution will continue even if the step execution fails.",
  "/routes/{id}.steps.#.[type=LineFolding].actionOnStepSuccess": "Action on step success. Defines if the route will continue after the step success.",
  "/routes/{id}.steps.#.[type=LineFolding].condition": "An expression for step execution when conditionType is EL.",
  "/routes/{id}.steps.#.[type=LineFolding].conditionType": "Defines whether the step is executed always or based on a condition, specified in the condition property using expression language.",
  "/routes/{id}.steps.#.[type=LineFolding].fileFilterExpression": "File name or file name expression. It is used with the file filter expression property.",
  "/routes/{id}.steps.#.[type=LineFolding].fileFilterExpressionType": "File filter expression type.",
  "/routes/{id}.steps.#.[type=LineFolding].fileFoldWidth": "Maximum lane width in the file over which point it will be folded. A positive integer value.",
  "/routes/{id}.steps.#.[type=LineFolding].id": "Route step Id.",
  "/routes/{id}.steps.#.[type=LineFolding].inputCharset": "Specify the source file encoding. Example: UTF-8\n",
  "/routes/{id}.steps.#.[type=LineFolding].outputCharset": "Specify output file encoding. If not specified, source file encoding is used.",
  "/routes/{id}.steps.#.[type=LineFolding].postTransformationActionRenameAsExpression": "Post transformation action rename expression for line folding step.",
  "/routes/{id}.steps.#.[type=LineFolding].status": "Route step status.",
  "/routes/{id}.steps.#.[type=LineFolding].type": "Route step type. ExecuteRoute step links the routes of type TEMPLATE and SIMPLE. The next steps are used with SIMPLE route type.",
  "/routes/{id}.steps.#.[type=LinePadding].actionOnStepFailure": "Action on step failure. If set to PROCEED, the route execution will continue even if the step execution fails.",
  "/routes/{id}.steps.#.[type=LinePadding].actionOnStepSuccess": "Action on step success. Defines if the route will continue after the step success.",
  "/routes/{id}.steps.#.[type=LinePadding].condition": "An expression for step execution when conditionType is EL.",
  "/routes/{id}.steps.#.[type=LinePadding].conditionType": "Defines whether the step is executed always or based on a condition, specified in the condition property using expression language.",
  "/routes/{id}.steps.#.[type=LinePadding].fileFilterExpression": "File name or file name expression. It is used with the file filter expression property.",
  "/routes/{id}.steps.#.[type=LinePadding].fileFilterExpressionType": "File filter expression type.",
  "/routes/{id}.steps.#.[type=LinePadding].id": "Route step Id.",
  "/routes/{id}.steps.#.[type=LinePadding].inputCharset": "Specify the source file encoding. Example: UTF-8\n",
  "/routes/{id}.steps.#.[type=LinePadding].linePaddingCharacter": "Specify line padding character as valid Unicode escape sequence. Example : \\u0043\n",
  "/routes/{id}.steps.#.[type=LinePadding].linePaddingLength": "Line padding length.",
  "/routes/{id}.steps.#.[type=LinePadding].outputCharset": "Specify output file encoding. If not specified, source file encoding is used",
  "/routes/{id}.steps.#.[type=LinePadding].postTransformationActionRenameAsExpression": "Post transformation action rename expression for line padding step.",
  "/routes/{id}.steps.#.[type=LinePadding].status": "Route step status.",
  "/routes/{id}.steps.#.[type=LinePadding].type": "Route step type. ExecuteRoute step links the routes of type TEMPLATE and SIMPLE. The next steps are used with SIMPLE route type.",
  "/routes/{id}.steps.#.[type=LineTruncating].actionOnStepFailure": "Action on step failure. If set to PROCEED, the route execution will continue even if the step execution fails.",
  "/routes/{id}.steps.#.[type=LineTruncating].actionOnStepSuccess": "Action on step success. Defines if the route will continue after the step success.",
  "/routes/{id}.steps.#.[type=LineTruncating].condition": "An expression for step execution when conditionType is EL.",
  "/routes/{id}.steps.#.[type=LineTruncating].conditionType": "Defines whether the step is executed always or based on a condition, specified in the condition property using expression language.",
  "/routes/{id}.steps.#.[type=LineTruncating].fileFilterExpression": "File name or file name expression. It is used with the file filter expression property.",
  "/routes/{id}.steps.#.[type=LineTruncating].fileFilterExpressionType": "File filter expression type.",
  "/routes/{id}.steps.#.[type=LineTruncating].id": "Route step Id.",
  "/routes/{id}.steps.#.[type=LineTruncating].inputCharset": "Specify the source file encoding. Example: UTF-8\n",
  "/routes/{id}.steps.#.[type=LineTruncating].outputCharset": "Specify output file encoding. If not specified, source file encoding is used.",
  "/routes/{id}.steps.#.[type=LineTruncating].postTransformationActionRenameAsExpression": "Post transformation action rename expression for line truncating step.",
  "/routes/{id}.steps.#.[type=LineTruncating].status": "Route step status.",
  "/routes/{id}.steps.#.[type=LineTruncating].truncateLength": "Line Truncate trims the file lines to have a limited maximum length. Use this setting to specify the lines maximum length in number of characters/symbols. This will cause extra characters to be discarded.",
  "/routes/{id}.steps.#.[type=LineTruncating].type": "\u003cnil\u003e",
  "/routes/{id}.steps.#.[type=PgpDecryption].actionOnStepFailure": "Action on step failure. If set to PROCEED, the route execution will continue even if the step execution fails.",
  "/routes/{id}.steps.#.[type=PgpDecryption].actionOnStepSuccess": "Action on step success. Defines if the route will continue after the step success.",
  "/routes/{id}.steps.#.[type=PgpDecryption].condition": "An expression for step execution when conditionType is EL.",
  "/routes/{id}.steps.#.[type=PgpDecryption].conditionType": "Defines whether the step is executed always or based on a condition, specified in the condition property using expression language.",
  "/routes/{id}.steps.#.[type=PgpDecryption].fileFilterExpression": "File name or file name expression. It is used with the file filter expression property.",
  "/routes/{id}.steps.#.[type=PgpDecryption].fileFilterExpressionType": "File filter expression type.",
  "/routes/{id}.steps.#.[type=PgpDecryption].id": "Route step Id.",
  "/routes/{id}.steps.#.[type=PgpDecryption].postTransformationActionRenameAsExpression": "Post transformation action rename expression for step.",
  "/routes/{id}.steps.#.[type=PgpDecryption].requireEncryption": "Require encryption.",
  "/routes/{id}.steps.#.[type=PgpDecryption].requireTrustedSignature": "Require trusted signature.",
  "/routes/{id}.steps.#.[type=PgpDecryption].status": "Route step status.",
  "/routes/{id}.steps.#.[type=PgpDecryption].type": "Route step type. ExecuteRoute step links the routes of type TEMPLATE and SIMPLE. The next steps are used with SIMPLE route type.",
  "/routes/{id}.steps.#.[type=PgpEncryption].actionOnStepFailure": "Action on step failure. If set to PROCEED, the route execution will continue even if the step execution fails.",
  "/routes/{id}.steps.#.[type=PgpEncryption].actionOnStepSuccess": "Action on step success. Defines if the route will continue after the step success.",
  "/routes/{id}.steps.#.[type=PgpEncryption].compressionLevel": "The values are 2 for FAST, 5 for NORMAL, 7 for GOOD, 9 for BEST",
  "/routes/{id}.steps.#.[type=PgpEncryption].compressionType": "Numbers in string format used \"0\" - no compression, \"-1\" - use preferred, \"1\" - ZIP, \"2\" - ZLIB, \"3\" - BZIP2",
  "/routes/{id}.steps.#.[type=PgpEncryption].condition": "An expression for step execution when conditionType is EL.",
  "/routes/{id}.steps.#.[type=PgpEncryption].conditionType": "Defines whether the step is executed always or based on a condition, specified in the condition property using expression language.",
  "/routes/{id}.steps.#.[type=PgpEncryption].encryptKeyExpression": "PGP encryption name amongst PGP Public Keys (within the selected above account) or by entering an expression for this. Wild card symbols ( asterisk symbol and ?) can also be used when specifying the PGP key alias. If multiple keys match the pattern the first one will be picked up and used.",
  "/routes/{id}.steps.#.[type=PgpEncryption].encryptKeyExpressionType": "Account name or expression.",
  "/routes/{id}.steps.#.[type=PgpEncryption].encryptKeyOwnerExpression": "You can specify either an account name or use an EL expression to determine the recipient based on the environment information (such as filename). If an account name is unknown (e.g. expression based) its PGP certificates will be determined on runtime. PGP certificates can be expression based as well. All the encrypt key related properties (expressions, owners, types) should be set if an encrypt key is used. Encrypt or sign key usage is mandatory.",
  "/routes/{id}.steps.#.[type=PgpEncryption].encryptKeyOwnerExpressionType": "Account name or expression.",
  "/routes/{id}.steps.#.[type=PgpEncryption].fileFilterExpression": "File name or file name expression. It is used with the file filter expression property.",
  "/routes/{id}.steps.#.[type=PgpEncryption].fileFilterExpressionType": "File filter expression type.",
  "/routes/{id}.steps.#.[type=PgpEncryption].id": "Route step Id.",
  "/routes/{id}.steps.#.[type=PgpEncryption].postTransformationActionRenameAsExpression": "Post transformation action rename expression for step.",
  "/routes/{id}.steps.#.[type=PgpEncryption].signKeyExpression": "PGP encryption name amongst PGP Public Keys (within the selected above account) or by entering an expression for this. Wild card symbols ( asterisk symbol and ?) can also be used when specifying the PGP key alias. If multiple keys match the pattern the first one will be picked up and used.",
  "/routes/{id}.steps.#.[type=PgpEncryption].signKeyExpressionType": "PGP Key alias or expression.",
  "/routes/{id}.steps.#.[type=PgpEncryption].signKeyOwnerExpression": "You can specify either an account name or use an EL expression to determine the recipient based on the environment information (such as filename). If an account name is unknown (e.g. expression based) its PGP certificates will be determined on runtime. PGP certificates can be expression based as well. All the sign key related properties (expressions, owners, types) should be set if a sign key is used.",
  "/routes/{id}.steps.#.[type=PgpEncryption].signKeyOwnerExpressionType": "Account name or expression.",
  "/routes/{id}.steps.#.[type=PgpEncryption].status": "Route step status.",
  "/routes/{id}.steps.#.[type=PgpEncryption].type": "Route step type. ExecuteRoute step links the routes of type TEMPLATE and SIMPLE. The next steps are used with SIMPLE route type.",
  "/routes/{id}.steps.#.[type=PgpEncryption].useAsciiArmour": "Encode Using ASCII Armor",
  "/routes/{id}.steps.#.[type=Pluggable].actionOnStepFailure": "Action on step failure. If set to PROCEED, the route execution will continue even if the step execution fails.",
  "/routes/{id}.steps.#.[type=Pluggable].actionOnStepSuccess": "Action on step success. Defines if the route will continue after the step success.",
  "/routes/{id}.steps.#.[type=Pluggable].condition": "An expression for step execution when conditionType is EL.",
  "/routes/{id}.steps.#.[type=Pluggable].conditionType": "Defines whether the step is executed always or based on a condition, specified in the condition property using expression language.",
  "/routes/{id}.steps.#.[type=Pluggable].id": "Route step Id.",
  "/routes/{id}.steps.#.[type=Pluggable].status": "Route step status.",
  "/routes/{id}.steps.#.[type=Pluggable].type": "Route step type. ExecuteRoute step links the routes of type TEMPLATE and SIMPLE. The next steps are used with SIMPLE route type.",
  "/routes/{id}.steps.#.[type=Publish].actionOnStepFailure": "Action on step failure. If set to PROCEED, the route execution will continue even if the step execution fails.",
  "/routes/{id}.steps.#.[type=Publish].actionOnStepSuccess": "Action on step success. Defines if the route will continue after the step success.",
  "/routes/{id}.steps.#.[type=Publish].condition": "An expression for step execution when conditionType is EL.",
  "/routes/{id}.steps.#.[type=Publish].conditionType": "Defines whether the step is executed always or based on a condition, specified in the condition property using expression language.",
  "/routes/{id}.steps.#.[type=Publish].disableAutoCreateTargetFolder": "Disable auto create target folder for step.",
  "/routes/{id}.steps.#.[type=Publish].fileFilterExpression": "File name or file name expression. It is used with the file filter expression property.",
  "/routes/{id}.steps.#.[type=Publish].fileFilterExpressionType": "File filter expression type.",
  "/routes/{id}.steps.#.[type=Publish].filenameCollisionResolutionType": "File name collision resolution type.",
  "/routes/{id}.steps.#.[type=Publish].id": "Route step Id.",
  "/routes/{id}.steps.#.[type=Publish].postRoutingActionRenameExpression": "Post transformation action rename expression for step.",
  "/routes/{id}.steps.#.[type=Publish].postRoutingActionType": "Post routing action types",
  "/routes/{id}.steps.#.[type=Publish].publishFileAs": "New file name or expression for a new file name.",
  "/routes/{id}.steps.#.[type=Publish].status": "Route step status.",
  "/routes/{id}.steps.#.[type=Publish].targetAccountExpression": "Target account name or expression.",
  "/routes/{id}.steps.#.[type=Publish].targetAccountExpressionType": "Target account name or expression will be used.",
  "/routes/{id}.steps.#.[type=Publish].targetFolderExpression": "Folder in the account to publish the file to. Not existing folder will be automatically created. You can specify either a folder name or use an EL expression to determine the folder based on the environment information\n",
  "/routes/{id}.steps.#.[type=Publish].targetFolderExpressionType": "Target folder simple name or expression will be used.",
  "/routes/{id}.steps.#.[type=Publish].triggerSubscription": "When 'true', file published to a subscription folder triggers the subscription folder. Set to 'false' if you do not want any actions to be triggered as part of the publish operations (e.g. when publishing to the same subscription the file was picked up from)\n",
  "/routes/{id}.steps.#.[type=Publish].type": "\u003cnil\u003e",
  "/routes/{id}.steps.#.[type=PullFromPartner].actionOnStepFailure": "Action on step failure. If set to PROCEED, the route execution will continue even if the step execution fails.",
  "/routes/{id}.steps.#.[type=PullFromPartner].actionOnStepSuccess": "Action on step success. Defines if the route will continue after the step success.",
  "/routes/{id}.steps.#.[type=PullFromPartner].condition": "An expression for step execution when conditionType is EL.",
  "/routes/{id}.steps.#.[type=PullFromPartner].conditionType": "Defines whether the step is executed always or based on a condition, specified in the condition property using expression language.",
  "/routes/{id}.steps.#.[type=PullFromPartner].id": "Route step Id.",
  "/routes/{id}.steps.#.[type=PullFromPartner].localFileNameExpression": "Value or expression that would be used when naming downloaded the files.\n",
  "/routes/{id}.steps.#.[type=PullFromPartner].localFileNameExpressionType": "Name or expression.",
  "/routes/{id}.steps.#.[type=PullFromPartner].localFolderPathExpression": "Path or expression translating to the path where the downloaded file(s) would be stored.\n",
  "/routes/{id}.steps.#.[type=PullFromPartner].localFolderPathExpressionType": "Path or expression.",
  "/routes/{id}.steps.#.[type=PullFromPartner].remoteFileNameExpression": "Name or expression translating to a name or a pattern that wold be used to filter the file(s) in the remote folder.\n",
  "/routes/{id}.steps.#.[type=PullFromPartner].remoteFileNameExpressionType": "Name or expression.",
  "/routes/{id}.steps.#.[type=PullFromPartner].remoteFolderPathExpression": "Path or expression translating to the path from where the file(s) would be downloaded from.\n",
  "/routes/{id}.steps.#.[type=PullFromPartner].remoteFolderPathExpressionType": "Path or expression.",
  "/routes/{id}.steps.#.[type=PullFromPartner].status": "Route step status.",
  "/routes/{id}.steps.#.[type=PullFromPartner].targetAccountExpression": "Target account name or expression.",
  "/routes/{id}.steps.#.[type=PullFromPartner].targetAccountExpressionType": "Account name or expression type.",
  "/routes/{id}.steps.#.[type=PullFromPartner].transferSiteExpression": "This value should be specified as concatenation of transfer sites or expressions with a separator \"#!#CVD#!#\". Examples - transfer_site_name#!#CVD#!#, transfer_site_name1#!#CVD#!#transfer_site_name2#!#CVD#!#, transfer_site_name_expression#!#CVD#!#",
  "/routes/{id}.steps.#.[type=PullFromPartner].transferSiteExpressionType": "Specifies whether a list of site names or an expression will be used for the transferSiteExpression parameter.",
  "/routes/{id}.steps.#.[type=PullFromPartner].type": "\u003cnil\u003e",
  "/routes/{id}.steps.#.[type=Rename].actionOnStepFailure": "Action on step failure. If set to PROCEED, the route execution will continue even if the step execution fails.",
  "/routes/{id}.steps.#.[type=Rename].actionOnStepSuccess": "Action on step success. Defines if the route will continue after the step success.",
  "/routes/{id}.steps.#.[type=Rename].condition": "An expression for step execution when conditionType is EL.",
  "/routes/{id}.steps.#.[type=Rename].conditionType": "Defines whether the step is executed always or based on a condition, specified in the condition property using expression language.",
  "/routes/{id}.steps.#.[type=Rename].fileFilterExpression": "File name or file name expression. It is used with the file filter expression property",
  "/routes/{id}.steps.#.[type=Rename].fileFilterExpressionType": "File filter expression type.",
  "/routes/{id}.steps.#.[type=Rename].id": "Route step Id.",
  "/routes/{id}.steps.#.[type=Rename].outputFileName": "Output file name or expression. Example: ${basename(currentfulltarget)}.transformed\n",
  "/routes/{id}.steps.#.[type=Rename].status": "Route step status.",
  "/routes/{id}.steps.#.[type=Rename].type": "Route step type. ExecuteRoute step links the routes of type TEMPLATE and SIMPLE. The next steps are used with SIMPLE route type.",
  "/routes/{id}.steps.#.[type=SendToPartner].actionOnStepFailure": "Action on step failure. If set to PROCEED, the route execution will continue even if the step execution fails.",
  "/routes/{id}.steps.#.[type=SendToPartner].actionOnStepSuccess": "Action on step success. Defines if the route will continue after the step success.",
  "/routes/{id}.steps.#.[type=SendToPartner].archivePolicyOnFailure": "Backup the files in the configured archive folder if the step execution fails. By default will archive the files based on the account configuration.",
  "/routes/{id}.steps.#.[type=SendToPartner].archivePolicyOnSuccess": "Backup the files in the configured archive folder if the step execution succeeds. By default will archive the files based on the account configuration.",
  "/routes/{id}.steps.#.[type=SendToPartner].condition": "An expression for step execution when conditionType is EL.",
  "/routes/{id}.steps.#.[type=SendToPartner].conditionType": "Defines whether the step is executed always or based on a condition, specified in the condition property using expression language.",
  "/routes/{id}.steps.#.[type=SendToPartner].dataEncoding": "Advanced PeSIT Setting. Data encoding.",
  "/routes/{id}.steps.#.[type=SendToPartner].fileFilterExpression": "File name or file name expression. It is used with the file filter expression property.",
  "/routes/{id}.steps.#.[type=SendToPartner].fileFilterExpressionType": "File filter expression type.",
  "/routes/{id}.steps.#.[type=SendToPartner].fileLabel": "Advanced PeSIT Setting. Use this field to override the file label (PI37) predefined in the transfer profile. To preserve it use ${pesit.pi.fileLabel}. This configuration parameter corresponds to the nfname parameter in Axway Transfer CFT.\n",
  "/routes/{id}.steps.#.[type=SendToPartner].finalDestination": "Advanced PeSIT Setting. Use this field to override the final destination (PI62) of the transfer. To preserve the original value use ${pesit.pi.finalDestinationID}. To make a Store and Forward PeSIT transfer specify the final destination and choose the intermediate partner (ipart parameter in Axway Transfer CFT) in the transfer site list.\n",
  "/routes/{id}.steps.#.[type=SendToPartner].id": "Route step Id.",
  "/routes/{id}.steps.#.[type=SendToPartner].maxNumberOfRetries": "Number of times each transfer will be retried if it fails. The retries are executed synchronously and the step will not finish execution until all files are sent successfully or the retry count configured in this property is reached.",
  "/routes/{id}.steps.#.[type=SendToPartner].maxParallelClients": "Maximum number of transfers that will be executed in parallel by the step.",
  "/routes/{id}.steps.#.[type=SendToPartner].originator": "Advanced PeSIT Setting. Use this field to override the original sender (PI61) of the transfer. To preserve the original value use ${pesit.pi.originalSenderID}.\n",
  "/routes/{id}.steps.#.[type=SendToPartner].postRoutingActionRenameExpression": "Post transformation action rename expression for step.",
  "/routes/{id}.steps.#.[type=SendToPartner].postRoutingActionType": "Post routing action types: NONE, DELETE, RENAME. Default is no action (NONE).\n",
  "/routes/{id}.steps.#.[type=SendToPartner].recordFormat": "Advanced PeSIT Setting. \"Variable\", \"Fixed\". Use this field to override the record format (PI31) predefined in the transfer profile. To preserve it use ${pesit.pi.recordFormat}. This configuration parameter corresponds to the frecfm parameter in Axway Transfer CFT.\n",
  "/routes/{id}.steps.#.[type=SendToPartner].recordLength": "Use this field to override the record length (PI32) predefined in the transfer profile. To preserve it use ${pesit.pi.recordLength}. This configuration parameter corresponds to the frecl parameter in Axway Transfer CFT.\n",
  "/routes/{id}.steps.#.[type=SendToPartner].routeFileAs": "Name or expression like ${basename(currentfulltarget)}.sent or ${basename(transfer.target)}.?.${timestamp}?${extension(transfer.target)}\n",
  "/routes/{id}.steps.#.[type=SendToPartner].sleepBetweenRetries": "Time interval (in milliseconds) which will be awaited between retries.",
  "/routes/{id}.steps.#.[type=SendToPartner].sleepIncrementBetweenRetries": "Time (in milliseconds) with which the sleep interval between retries will be increased after each retry.",
  "/routes/{id}.steps.#.[type=SendToPartner].status": "Route step status.",
  "/routes/{id}.steps.#.[type=SendToPartner].storeAndForwardMode": "Advanced PeSIT Setting. All the advanced PeSIT settings are included or all are ommitted. \"Preserve\" Store and Forward mode will preserve the current Store and Forward transfer (if any). \"Start new\" will initiate a new Store and Forward transfer and the current transfer (if any) will be acknowledged.\n",
  "/routes/{id}.steps.#.[type=SendToPartner].targetAccountExpression": "Target account name or expression.",
  "/routes/{id}.steps.#.[type=SendToPartner].targetAccountExpressionType": "Account name or expression type.",
  "/routes/{id}.steps.#.[type=SendToPartner].transferProfileExpression": "Transfer profile property is used only if the transfer site is of type PeSIT. Otherwise it will be ignored. When the transfer profile is specified by using Expression Language, there are 3 possible cases: (1) EL expression does not match any account transfer profiles - then the default transfer profile is used. (2) EL expression matches more than one transfer profile - then the default transfer profile is used. (3) EL expression matches exactly one transfer profile - the matched transfer profile is used.\n",
  "/routes/{id}.steps.#.[type=SendToPartner].transferProfileExpressionType": "Profile name or expression.",
  "/routes/{id}.steps.#.[type=SendToPartner].transferSiteExpression": "This value should be specified as concatenation of transfer sites or expressions with a separator \"#!#CVD#!#\". Examples - transfer_site_name#!#CVD#!#, transfer_site_name1#!#CVD#!#transfer_site_name2#!#CVD#!#, transfer_site_name_expression#!#CVD#!#",
  "/routes/{id}.steps.#.[type=SendToPartner].transferSiteExpressionType": "Specifies whether a list of site names or an expression will be used for the transferSiteExpression parameter.",
  "/routes/{id}.steps.#.[type=SendToPartner].triggerFileContent": "The content of the trigger file. Expression language is supported. This value should be specified as concatenation of lines of the trigger file with a separator \"#!#CVD#!#\". Examples - line#!#CVD#!#, line1#!#CVD#!#line2#!#CVD#!#, line_expression#!#CVD#!#, null value or \u0026#35;!#CVD#!# for empty (zero byte) trigger file.",
  "/routes/{id}.steps.#.[type=SendToPartner].triggerFileForEach": "Trigger file output for each transferred file.",
  "/routes/{id}.steps.#.[type=SendToPartner].triggerFileName": "Name of the trigger file to be sent to the transfer site after successful routing of file(s). EL expressions are supported.",
  "/routes/{id}.steps.#.[type=SendToPartner].triggerTargetAccountExpression": "An account name, login name or use an expression to determine the recipient based on the environment information.",
  "/routes/{id}.steps.#.[type=SendToPartner].triggerTargetAccountExpressionType": "Target account expression type on trigger.",
  "/routes/{id}.steps.#.[type=SendToPartner].triggerTransferProfileExpression": "Transfer profile property is used only if the transfer site is of type PeSIT. Otherwise it will be ignored.",
  "/routes/{id}.steps.#.[type=SendToPartner].triggerTransferProfileExpressionType": "Transfer profile expression type on trigger.",
  "/routes/{id}.steps.#.[type=SendToPartner].triggerTransferSiteExpression": "Transfer sites to send trigger files to. Expression language is supported. This value must be a concatenation of trigger transfer sites or expressions  with a separator \"#!#CVD#!#\". Examples - transfer_site_name#!#CVD#!#, transfer_site_name1#!#CVD#!#transfer_site_name2#!#CVD#!#, transfer_site_name_expression#!#CVD#!#",
  "/routes/{id}.steps.#.[type=SendToPartner].triggerTransferSiteExpressionType": "Transfer site expression type for the trigger output file.",
  "/routes/{id}.steps.#.[type=SendToPartner].triggerUploadFolder": "You can specify an upload folder that will overwrite the one configured in the transfer site settings(if allowed in the transfer site). Expression language can be used to specify the new upload folder.",
  "/routes/{id}.steps.#.[type=SendToPartner].type": "Route step type. ExecuteRoute step links the routes of type TEMPLATE and SIMPLE. The next steps are used with SIMPLE route type.",
  "/routes/{id}.steps.#.[type=SendToPartner].uploadFolder": "You can specify an upload folder that will overwrite the one configured in the transfer site settings (if allowed with the respective transfer site). Expression language can be used to specify the new upload folder.",
  "/routes/{id}.steps.#.[type=SendToPartner].userMessage": "Advanced PeSIT Setting. The Last PeSIT specific setting. Use this field to override the user message (PI99) predefined in the PeSIT transfer site. To preserve use ${pesit.pi.serviceParam}. This configuration parameter corresponds to the parm parameter in Axway Transfer CFT.\n",
  "/routes/{id}.steps.#.[type=SendToPartner].virtualFilename": "Advanced PeSIT Setting. Use this field to override the virtual file name (PI12) predefined in the transfer profile. To preserve it use ${pesit.pi.fileName}. This configuration parameter corresponds to the idf parameter in Axway Transfer CFT.\n",
  "/routes/{id}.subscriptions.#": "\u003cnil\u003e",
  "/routes/{id}.successEmailName": "E-mail Notifications on route success",
  "/routes/{id}.successEmailNotification": "Notify following e-mails on route success.\n",
  "/routes/{id}.successEmailTemplate": "Notification template name on route success",
  "/routes/{id}.triggeringEmailName": "E-mail Notifications on route triggering",
  "/routes/{id}.triggeringEmailNotification": "Notify following e-mails on route triggering.",
  "/routes/{id}.triggeringEmailTemplate": "Notification template name on route triggering",
  "/routes/{id}.type": "Route types: TEMPLATE - Route Package Template, SIMPLE - Route in a Route Package Template, COMPOSITE - Assign a route with TEMPLATE type to a virtual account and its subscriptions\n",
  "/sites/{id}[type=custom].accessLevel": "The access level for this site.",
  "/sites/{id}[type=custom].account": "The account for which the site is created",
  "/sites/{id}[type=custom].additionalAttributes": "Additional attributes which are defined with \"key\": \"value\" pairs. Keys must start with \"userVars.\" prefix, follow the pattern: [a-zA-Z0-9_.]+\nand have length between 10 and 255 characters (including the prefix). Non prefixed part of key should not start with \"userVars.\", since it is\na reserved word. Both key and value cannot be blank.\n",
  "/sites/{id}[type=custom].clientCertificate": "The client certificate ID used for mutual authentication.",
  "/sites/{id}[type=custom].default": "Defines whether it is a default site. Only site from type PeSIT can be marked as 'Default'",
  "/sites/{id}[type=custom].id": "The id of the site.",
  "/sites/{id}[type=custom].maxConcurrentConnection": "The max concurrent connection of the site",
  "/sites/{id}[type=custom].name": "The type of the site. Acts as a discriminator.",
  "/sites/{id}[type=custom].protocol": "Protocol of the site.",
  "/sites/{id}[type=custom].transferType": "The transfer type of the site. It can be unspecified (N), internal (I), partner(E)",
  "/sites/{id}[type=custom].type": "\u003cnil\u003e",
  "/sites/{id}[type=folder].accessLevel": "The access level for this site.",
  "/sites/{id}[type=folder].account": "The account for which the site is created",
  "/sites/{id}[type=folder].additionalAttributes": "Additional attributes which are defined with \"key\": \"value\" pairs. Keys must start with \"userVars.\" prefix, follow the pattern: [a-zA-Z0-9_.]+\nand have length between 10 and 255 characters (including the prefix). Non prefixed part of key should not start with \"userVars.\", since it is\na reserved word. Both key and value cannot be blank.\n",
  "/sites/{id}[type=folder].default": "Defines whether it is a default site. Only site from type PeSIT can be marked as 'Default'",
  "/sites/{id}[type=folder].downloadFolder": "Specify the download folder. When 'download.folder.advanced.expression.enabled' is checked the download folder is evaluated using expression language.",
  "/sites/{id}[type=folder].downloadFolderAdvancedExpressionEnabled": "When it is 'true' the download folder is evaluated using expression language.",
  "/sites/{id}[type=folder].downloadPattern": "Specify the download pattern.",
  "/sites/{id}[type=folder].downloadPatternAdvancedExpressionEnabled": "When it is 'true' the download pattern is evaluated using expression language.",
  "/sites/{id}[type=folder].downloadPatternType": "Specify the download pattern type. Pattern matching expression supports 'glob' and 'regex' syntaxes.When the pattern type is \"File Globbing\" then the String representation of the filename is matched using a limited pattern language that resembles regular expressions but with a simpler syntax.",
  "/sites/{id}[type=folder].downloadSubfolderPattern": "Specify the pattern used to match folder names to determine whether to apply the download pattern to the folder.",
  "/sites/{id}[type=folder].downloadSubfolderPatternType": "Specify the dowlnload pattern type. Pattern matching expression supports 'glob' and 'regex' syntaxes. When the pattern type is \"File Globbing\" then the String representation of the filename is matched using a limited pattern language that resembles regular expressions but with a simpler syntax.",
  "/sites/{id}[type=folder].id": "The id of the site.",
  "/sites/{id}[type=folder].maxConcurrentConnection": "The max concurrent connection of the site",
  "/sites/{id}[type=folder].name": "The type of the site. Acts as a discriminator.",
  "/sites/{id}[type=folder].protocol": "\u003cnil\u003e",
  "/sites/{id}[type=folder].transferType": "The transfer type of the site. It can be unspecified (N), internal (I), partner(E)",
  "/sites/{id}[type=folder].type": "\u003cnil\u003e",
  "/sites/{id}[type=folder].uploadFolder": "Specify the upload folder.",
  "/sites/{id}[type=pesit].accessLevel": "The access level for this site.",
  "/sites/{id}[type=pesit].account": "The account for which the site is created",
  "/sites/{id}[type=pesit].additionalAttributes": "Additional attributes which are defined with \"key\": \"value\" pairs. Keys must start with \"userVars.\" prefix, follow the pattern: [a-zA-Z0-9_.]+\nand have length between 10 and 255 characters (including the prefix). Non prefixed part of key should not start with \"userVars.\", since it is\na reserved word. Both key and value cannot be blank.\n",
  "/sites/{id}[type=pesit].alternativeAddresses.#.host": "The host/url of the alternative address.",
  "/sites/{id}[type=pesit].alternativeAddresses.#.port": "The port of the alternative address.",
  "/sites/{id}[type=pesit].alternativeAddresses.#.position": "The position when alternate addresses.",
  "/sites/{id}[type=pesit].cipherSuites": "Cipher suites for ssh site.",
  "/sites/{id}[type=pesit].compression": "Specify the transfer compression. It can be 0 (None), 1 (Horizontal), 2 (Vertical) or 3 (Both).",
  "/sites/{id}[type=pesit].default": "Defines whether it is a default site. Only site from type PeSIT can be marked as 'Default'",
  "/sites/{id}[type=pesit].dmz": "Specify the remote partner network zone. It can be 'any', 'none', 'Default' or custom network zone.",
  "/sites/{id}[type=pesit].finalDestination": "Advanced PeSIT Setting. Use this field to override the final destination (PI62) of the transfer. To preserve the original value use ${pesit.pi.finalDestinationID}. To make a Store and Forward PeSIT transfer specify the final destination and choose the intermediate partner (ipart parameter in Axway Transfer CFT) in the transfer site list.\n",
  "/sites/{id}[type=pesit].host": "Specify the remote partner host.",
  "/sites/{id}[type=pesit].id": "The id of the site.",
  "/sites/{id}[type=pesit].loginCertificate": "The client certificate ID used for mutual authentication.",
  "/sites/{id}[type=pesit].maxConcurrentConnection": "The max concurrent connection of the site",
  "/sites/{id}[type=pesit].name": "The type of the site. Acts as a discriminator.",
  "/sites/{id}[type=pesit].originator": "Advanced PeSIT Setting. Use this field to override the original sender (PI61) of the transfer. To preserve the original value use ${pesit.pi.originalSenderID}.\n",
  "/sites/{id}[type=pesit].partnerCertificate": "The partner certificate ID used for mutual authentication.",
  "/sites/{id}[type=pesit].partnerPassword": "Specify the partner password encrypted in 'AES128'. This property should be set if 'usePartnerPassword' is 'true'.",
  "/sites/{id}[type=pesit].pesitId": "Specify the PeSIT ID which will be used for defining the PeSIT partnership.",
  "/sites/{id}[type=pesit].port": "Specify the remote partner port.",
  "/sites/{id}[type=pesit].preconnectionPartnerId": "Specify the partner id used for Pre-Connection.",
  "/sites/{id}[type=pesit].preconnectionPartnerPassword": "Specify the partner password encrypted in 'AES128'. It is used for Pre-Connection.",
  "/sites/{id}[type=pesit].preconnectionServerId": "Specify the server id used for Pre-Connection.",
  "/sites/{id}[type=pesit].preconnectionServerPassword": "Specify the server password encrypted in 'AES128'. It is used for preconnection.",
  "/sites/{id}[type=pesit].protocol": "Protocol of the site.",
  "/sites/{id}[type=pesit].protocols": "Enabled SSL protocols for ssh site.",
  "/sites/{id}[type=pesit].receiveMessage": "Specify a user receive message.",
  "/sites/{id}[type=pesit].sendMessage": "Specify a user send message. An expression language can be used e.g. ${pesit.serverID}.",
  "/sites/{id}[type=pesit].serverPassword": "Specify the server password encrypted in 'AES128'. This property should be set if 'useServerPassword' is 'true'.",
  "/sites/{id}[type=pesit].storeAndForwardMode": "Advanced PeSIT Setting. All the advanced PeSIT settings are included or all are ommitted. \"Preserve\" Store and Forward mode will preserve the current Store and Forward transfer (if any). \"Start new\" will initiate a new Store and Forward transfer and the current transfer (if any) will be acknowledged.\n",
  "/sites/{id}[type=pesit].transferType": "The transfer type of the site. It can be unspecified (N), internal (I), partner(E)",
  "/sites/{id}[type=pesit].type": "Type of the site.",
  "/sites/{id}[type=pesit].usePartnerPasswordExpr": "Specify whether to have partner password expressions or not.",
  "/sites/{id}[type=pesit].usePreconnectionPartnerPasswordExpr": "Specify whether to have Pre-Connection partner password expressions or not.",
  "/sites/{id}[type=pesit].usePreconnectionServerPasswordExpr": "Specify whether to have Pre-Connection server password expressions or not.",
  "/sites/{id}[type=pesit].useServerPasswordExpr": "Specify whether to have server password expressions or not.",
  "/sites/{id}[type=ssh].accessLevel": "The access level for this site.",
  "/sites/{id}[type=ssh].account": "The account for which the site is created",
  "/sites/{id}[type=ssh].additionalAttributes": "Additional attributes which are defined with \"key\": \"value\" pairs. Keys must start with \"userVars.\" prefix, follow the pattern: [a-zA-Z0-9_.]+\nand have length between 10 and 255 characters (including the prefix). Non prefixed part of key should not start with \"userVars.\", since it is\na reserved word. Both key and value cannot be blank.\n",
  "/sites/{id}[type=ssh].allowedMacs": "Allowed macs for ssh site.",
  "/sites/{id}[type=ssh].alternativeAddresses.#.host": "The host/url of the alternative address.",
  "/sites/{id}[type=ssh].alternativeAddresses.#.port": "The port of the alternative address.",
  "/sites/{id}[type=ssh].alternativeAddresses.#.position": "The position when alternate addresses.",
  "/sites/{id}[type=ssh].cipherSuites": "Cipher suites for ssh site.",
  "/sites/{id}[type=ssh].clientCertificate": "The client certificate ID used for mutual authentication.",
  "/sites/{id}[type=ssh].default": "Defines whether it is a default site. Only site from type PeSIT can be marked as 'Default'",
  "/sites/{id}[type=ssh].dmz": "Specify the remote site network zone.",
  "/sites/{id}[type=ssh].downloadFolder": "Specify the download folder.",
  "/sites/{id}[type=ssh].downloadFolderAdvancedExpressionEnabled": "When it is 'true' the download folder is evaluated using expression language.",
  "/sites/{id}[type=ssh].downloadPattern": "Specify the download pattern.",
  "/sites/{id}[type=ssh].downloadPatternAdvancedExpressionEnabled": "When it is 'true' the download pattern is evaluated using expression language.",
  "/sites/{id}[type=ssh].downloadPatternType": "Specify the download pattern type. Pattern matching expression supports 'glob' and 'regex' syntaxes.When the pattern type is \"File Globbing\" then the String representation of the filename is matched using a limited pattern language that resembles regular expressions but with a simpler syntax.",
  "/sites/{id}[type=ssh].fingerPrint": "Specify the fingerprint.",
  "/sites/{id}[type=ssh].host": "Specify the remote site server host.",
  "/sites/{id}[type=ssh].id": "The id of the site.",
  "/sites/{id}[type=ssh].keyExchangeAlgorithms": "Key exchange algorithms for ssh site.",
  "/sites/{id}[type=ssh].maxConcurrentConnection": "The max concurrent connection of the site",
  "/sites/{id}[type=ssh].name": "The type of the site. Acts as a discriminator.",
  "/sites/{id}[type=ssh].password": "Specify the site login password encrypted in 'AES128'. This property should be set if 'usePassword' is 'true'.",
  "/sites/{id}[type=ssh].port": "Specify the remote site server port.",
  "/sites/{id}[type=ssh].protocol": "Protocol of the site.",
  "/sites/{id}[type=ssh].protocols": "Enabled SSL protocols for ssh site.",
  "/sites/{id}[type=ssh].publicKeys": "Public keys for ssh site.",
  "/sites/{id}[type=ssh].transferMode": "Specify the transfer mode.",
  "/sites/{id}[type=ssh].transferType": "The transfer type of the site. It can be unspecified (N), internal (I), partner(E)",
  "/sites/{id}[type=ssh].type": "Type of the site.",
  "/sites/{id}[type=ssh].updatePermissionsWithChmodCommand": "Determines whether to use chmod or umask command to change file permissions. This setting overrides the global setting configured via the Ssh.UpdateFilePermissionsWithChmodCommand option. The possible values are - null(Default) - The global setting is applied; True - The file permissions, specified in the SSH transfer site, are set after transfer ends with chmod; False - The file handler is opened with specified permissions. The file permissions are set with umask. There is no need to edit the Upload Permissions field - correct format is automatically set.",
  "/sites/{id}[type=ssh].uploadFolder": "Specify the upload folder.",
  "/sites/{id}[type=ssh].uploadPermissions": "Defines the upload permissions.",
  "/sites/{id}[type=ssh].usePasswordExpr": "Specify whether to have password expressions or not.",
  "/sites/{id}[type=ssh].userName": "Specify the site login username.",
  "/subscriptions/{id}[type=AdvancedRouting].account": "The account of the subscription",
  "/subscriptions/{id}[type=AdvancedRouting].application": "The application of the subscription",
  "/subscriptions/{id}[type=AdvancedRouting].fileRetentionPeriod": "Specify the retention period of the pulled files. Must be non-negative integer between 0 and 36500.",
  "/subscriptions/{id}[type=AdvancedRouting].flowAttributes": "Flow attributes which are defined with \"key\": \"value\" pairs. Keys must start with \"userVars.\" prefix, follow the pattern: [a-zA-Z0-9_.]+\nand have length between 10 and 255 characters (including the prefix). Non prefixed part of key should not start with \"userVars.\", since it is\na reserved word. Both key and value cannot be blank.\n",
  "/subscriptions/{id}[type=AdvancedRouting].flowAttrsMergeMode": "The flow merge mode",
  "/subscriptions/{id}[type=AdvancedRouting].flowName": "Name of the CG flow",
  "/subscriptions/{id}[type=AdvancedRouting].folder": "The folder of the subscription",
  "/subscriptions/{id}[type=AdvancedRouting].folderMonitorScheduleCheck": "Whether a folder monitor subscription is scheduled.",
  "/subscriptions/{id}[type=AdvancedRouting].id": "The id of the subscription",
  "/subscriptions/{id}[type=AdvancedRouting].maxParallelSitPulls": "Custom attribute under which we store the option for maximum sit pulls to be executed simultaneously. Negative value or 0 - no limit, positive value 4 - limits simultaneously",
  "/subscriptions/{id}[type=AdvancedRouting].scheduledFolderMonitor": "Specify if this subscription is targeted for a scheduled folder monitor.",
  "/subscriptions/{id}[type=AdvancedRouting].subscriptionEncryptMode": "Encryption that will be used for subscription folder. Accepting one of default, enabled, disabled.",
  "/subscriptions/{id}[type=AdvancedRouting].type": "The type of the application. Acts as a discriminator.\n",
  "/subscriptions/{id}[type=Basic].account": "The account of the subscription",
  "/subscriptions/{id}[type=Basic].application": "The application of the subscription",
  "/subscriptions/{id}[type=Basic].fileRetentionPeriod": "Specify the retention period of the pulled files. Must be non-negative integer between 0 and 36500.",
  "/subscriptions/{id}[type=Basic].flowAttributes": "Flow attributes which are defined with \"key\": \"value\" pairs. Keys must start with \"userVars.\" prefix, follow the pattern: [a-zA-Z0-9_.]+\nand have length between 10 and 255 characters (including the prefix). Non prefixed part of key should not start with \"userVars.\", since it is\na reserved word. Both key and value cannot be blank.\n",
  "/subscriptions/{id}[type=Basic].flowAttrsMergeMode": "The flow merge mode",
  "/subscriptions/{id}[type=Basic].flowName": "Name of the CG flow",
  "/subscriptions/{id}[type=Basic].folder": "The folder of the subscription",
  "/subscriptions/{id}[type=Basic].folderMonitorScheduleCheck": "Whether a folder monitor subscription is scheduled.",
  "/subscriptions/{id}[type=Basic].id": "The id of the subscription",
  "/subscriptions/{id}[type=Basic].maxParallelSitPulls": "Custom attribute under which we store the option for maximum sit pulls to be executed simultaneously. Negative value or 0 - no limit, positive value 4 - limits simultaneously",
  "/subscriptions/{id}[type=Basic].postTransmissionActions.ptaOnPermfailInDoDelete": "Defines whether to delete the file on failure after the transmission.",
  "/subscriptions/{id}[type=Basic].postTransmissionActions.ptaOnPermfailInDoMove": "Specify a value to rename the file after transmission or move it to a different folder on failure. An expression language can be used to specify a file name/folder.",
  "/subscriptions/{id}[type=Basic].postTransmissionActions.ptaOnPermfailOutDoDelete": "Defines whether to delete the file on failure after the transmission.",
  "/subscriptions/{id}[type=Basic].postTransmissionActions.ptaOnPermfailOutDoMove": "Specify a value to rename the file after transmission or move it to a different folder on failure. An expression language can be used to specify a file name/folder.",
  "/subscriptions/{id}[type=Basic].postTransmissionActions.ptaOnSuccessInDoDelete": "Defines whether to delete the source file on success after the transmission.",
  "/subscriptions/{id}[type=Basic].postTransmissionActions.ptaOnSuccessInDoMove": "Specify a value to rename the file after transmission or move it to a different folder on success. An expression language can be used to specify a file name/folder.",
  "/subscriptions/{id}[type=Basic].postTransmissionActions.ptaOnSuccessOutDoDelete": "Defines whether to delete the file on success after the transmission.",
  "/subscriptions/{id}[type=Basic].postTransmissionActions.ptaOnSuccessOutDoMove": "Specify a value to rename the file after transmission or move it to a different folder on success. An expression language can be used to specify a file name/folder.",
  "/subscriptions/{id}[type=Basic].postTransmissionActions.ptaOnTempfailInDoDelete": "Defines whether to delete the file on failure after the transmission.",
  "/subscriptions/{id}[type=Basic].postTransmissionActions.ptaOnTempfailInDoMove": "Specify a value to rename the file after transmission or move it to a different folder on temporary failure. An expression language can be used to specify a file name/folder.",
  "/subscriptions/{id}[type=Basic].scheduledFolderMonitor": "Specify if this subscription is targeted for a scheduled folder monitor.",
  "/subscriptions/{id}[type=Basic].subscriptionEncryptMode": "Encryption that will be used for subscription folder. Accepting one of default, enabled, disabled.",
  "/subscriptions/{id}[type=Basic].templateAdvancedExpression": "Specify if advanced expressions section be displayed in Admin UI Subscriptions page.",
  "/subscriptions/{id}[type=Basic].type": "The type of the application. Acts as a discriminator.\n",
  "/subscriptions/{id}[type=HumanSystem].account": "The account of the subscription",
  "/subscriptions/{id}[type=HumanSystem].application": "The application of the subscription",
  "/subscriptions/{id}[type=HumanSystem].fileRetentionPeriod": "Specify the retention period of the pulled files. Must be non-negative integer between 0 and 36500.",
  "/subscriptions/{id}[type=HumanSystem].flowAttributes": "Flow attributes which are defined with \"key\": \"value\" pairs. Keys must start with \"userVars.\" prefix, follow the pattern: [a-zA-Z0-9_.]+\nand have length between 10 and 255 characters (including the prefix). Non prefixed part of key should not start with \"userVars.\", since it is\na reserved word. Both key and value cannot be blank.\n",
  "/subscriptions/{id}[type=HumanSystem].flowAttrsMergeMode": "The flow merge mode",
  "/subscriptions/{id}[type=HumanSystem].flowName": "Name of the CG flow",
  "/subscriptions/{id}[type=HumanSystem].folder": "The folder of the subscription",
  "/subscriptions/{id}[type=HumanSystem].folderMonitorScheduleCheck": "Whether a folder monitor subscription is scheduled.",
  "/subscriptions/{id}[type=HumanSystem].id": "The id of the subscription",
  "/subscriptions/{id}[type=HumanSystem].maxParallelSitPulls": "Custom attribute under which we store the option for maximum sit pulls to be executed simultaneously. Negative value or 0 - no limit, positive value 4 - limits simultaneously",
  "/subscriptions/{id}[type=HumanSystem].rules.#.enabled": "\u003cnil\u003e",
  "/subscriptions/{id}[type=HumanSystem].rules.#.fileFilterPattern": "\u003cnil\u003e",
  "/subscriptions/{id}[type=HumanSystem].rules.#.recipientPattern": "\u003cnil\u003e",
  "/subscriptions/{id}[type=HumanSystem].rules.#.targetFolder": "\u003cnil\u003e",
  "/subscriptions/{id}[type=HumanSystem].scheduledFolderMonitor": "Specify if this subscription is targeted for a scheduled folder monitor.",
  "/subscriptions/{id}[type=HumanSystem].subscriptionEncryptMode": "Encryption that will be used for subscription folder. Accepting one of default, enabled, disabled.",
  "/subscriptions/{id}[type=HumanSystem].type": "The type of the application. Acts as a discriminator.\n",
  "/subscriptions/{id}[type=MBFT].account": "The account of the subscription",
  "/subscriptions/{id}[type=MBFT].application": "The application of the subscription",
  "/subscriptions/{id}[type=MBFT].fileRetentionPeriod": "Specify the retention period of the pulled files. Must be non-negative integer between 0 and 36500.",
  "/subscriptions/{id}[type=MBFT].flowAttributes": "Flow attributes which are defined with \"key\": \"value\" pairs. Keys must start with \"userVars.\" prefix, follow the pattern: [a-zA-Z0-9_.]+\nand have length between 10 and 255 characters (including the prefix). Non prefixed part of key should not start with \"userVars.\", since it is\na reserved word. Both key and value cannot be blank.\n",
  "/subscriptions/{id}[type=MBFT].flowAttrsMergeMode": "The flow merge mode",
  "/subscriptions/{id}[type=MBFT].flowName": "Name of the CG flow",
  "/subscriptions/{id}[type=MBFT].folder": "The folder of the subscription",
  "/subscriptions/{id}[type=MBFT].folderMonitorScheduleCheck": "Whether a folder monitor subscription is scheduled.",
  "/subscriptions/{id}[type=MBFT].id": "The id of the subscription",
  "/subscriptions/{id}[type=MBFT].maxParallelSitPulls": "Custom attribute under which we store the option for maximum sit pulls to be executed simultaneously. Negative value or 0 - no limit, positive value 4 - limits simultaneously",
  "/subscriptions/{id}[type=MBFT].scheduledFolderMonitor": "Specify if this subscription is targeted for a scheduled folder monitor.",
  "/subscriptions/{id}[type=MBFT].subscriptionEncryptMode": "Encryption that will be used for subscription folder. Accepting one of default, enabled, disabled.",
  "/subscriptions/{id}[type=MBFT].type": "\u003cnil\u003e",
  "/subscriptions/{id}[type=SharedFolder].account": "The account of the subscription",
  "/subscriptions/{id}[type=SharedFolder].application": "The application of the subscription",
  "/subscriptions/{id}[type=SharedFolder].fileRetentionPeriod": "Specify the retention period of the pulled files. Must be non-negative integer between 0 and 36500.",
  "/subscriptions/{id}[type=SharedFolder].flowAttributes": "Flow attributes which are defined with \"key\": \"value\" pairs. Keys must start with \"userVars.\" prefix, follow the pattern: [a-zA-Z0-9_.]+\nand have length between 10 and 255 characters (including the prefix). Non prefixed part of key should not start with \"userVars.\", since it is\na reserved word. Both key and value cannot be blank.\n",
  "/subscriptions/{id}[type=SharedFolder].flowAttrsMergeMode": "The flow merge mode",
  "/subscriptions/{id}[type=SharedFolder].flowName": "Name of the CG flow",
  "/subscriptions/{id}[type=SharedFolder].folder": "The folder of the subscription",
  "/subscriptions/{id}[type=SharedFolder].folderMonitorScheduleCheck": "Whether a folder monitor subscription is scheduled.",
  "/subscriptions/{id}[type=SharedFolder].id": "The id of the subscription",
  "/subscriptions/{id}[type=SharedFolder].maxParallelSitPulls": "Custom attribute under which we store the option for maximum sit pulls to be executed simultaneously. Negative value or 0 - no limit, positive value 4 - limits simultaneously",
  "/subscriptions/{id}[type=SharedFolder].postTransmissionActions.ptaOnPermfailInDoDelete": "Defines whether to delete the file on failure after the transmission.",
  "/subscriptions/{id}[type=SharedFolder].postTransmissionActions.ptaOnPermfailInDoMove": "Specify a value to rename the file after transmission or move it to a different folder on failure. An expression language can be used to specify a file name/folder.",
  "/subscriptions/{id}[type=SharedFolder].postTransmissionActions.ptaOnSuccessInDoDelete": "Defines whether to delete the source file on success after the transmission.",
  "/subscriptions/{id}[type=SharedFolder].postTransmissionActions.ptaOnSuccessInDoMove": "Specify a value to rename the file after transmission or move it to a different folder on success. An expression language can be used to specify a file name/folder.",
  "/subscriptions/{id}[type=SharedFolder].postTransmissionActions.ptaOnTempfailInDoDelete": "Defines whether to delete the file on failure after the transmission.",
  "/subscriptions/{id}[type=SharedFolder].postTransmissionActions.ptaOnTempfailInDoMove": "Specify a value to rename the file after transmission or move it to a different folder on temporary failure. An expression language can be used to specify a file name/folder.",
  "/subscriptions/{id}[type=SharedFolder].scheduledFolderMonitor": "Specify if this subscription is targeted for a scheduled folder monitor.",
  "/subscriptions/{id}[type=SharedFolder].subscriptionEncryptMode": "Encryption that will be used for subscription folder. Accepting one of default, enabled, disabled.",
  "/subscriptions/{id}[type=SharedFolder].templateAdvancedExpression": "Specify if advanced expressions section be displayed in Admin UI Subscriptions page.",
  "/subscriptions/{id}[type=SharedFolder].type": "\u003cnil\u003e",
  "/subscriptions/{id}[type=SiteMailbox].account": "The account of the subscription",
  "/subscriptions/{id}[type=SiteMailbox].application": "The application of the subscription",
  "/subscriptions/{id}[type=SiteMailbox].fileRetentionPeriod": "Specify the retention period of the pulled files. Must be non-negative integer between 0 and 36500.",
  "/subscriptions/{id}[type=SiteMailbox].flowAttributes": "Flow attributes which are defined with \"key\": \"value\" pairs. Keys must start with \"userVars.\" prefix, follow the pattern: [a-zA-Z0-9_.]+\nand have length between 10 and 255 characters (including the prefix). Non prefixed part of key should not start with \"userVars.\", since it is\na reserved word. Both key and value cannot be blank.\n",
  "/subscriptions/{id}[type=SiteMailbox].flowAttrsMergeMode": "The flow merge mode",
  "/subscriptions/{id}[type=SiteMailbox].flowName": "Name of the CG flow",
  "/subscriptions/{id}[type=SiteMailbox].folder": "The folder of the subscription",
  "/subscriptions/{id}[type=SiteMailbox].folderMonitorScheduleCheck": "Whether a folder monitor subscription is scheduled.",
  "/subscriptions/{id}[type=SiteMailbox].id": "The id of the subscription",
  "/subscriptions/{id}[type=SiteMailbox].maxParallelSitPulls": "Custom attribute under which we store the option for maximum sit pulls to be executed simultaneously. Negative value or 0 - no limit, positive value 4 - limits simultaneously",
  "/subscriptions/{id}[type=SiteMailbox].postTransmissionActions.ptaOnPermfailInDoDelete": "Defines whether to delete the file on failure after the transmission.",
  "/subscriptions/{id}[type=SiteMailbox].postTransmissionActions.ptaOnPermfailInDoMove": "Specify a value to rename the file after transmission or move it to a different folder on failure. An expression language can be used to specify a file name/folder.",
  "/subscriptions/{id}[type=SiteMailbox].postTransmissionActions.ptaOnPermfailOutDoDelete": "Defines whether to delete the file on failure after the transmission.",
  "/subscriptions/{id}[type=SiteMailbox].postTransmissionActions.ptaOnPermfailOutDoMove": "Specify a value to rename the file after transmission or move it to a different folder on failure. An expression language can be used to specify a file name/folder.",
  "/subscriptions/{id}[type=SiteMailbox].postTransmissionActions.ptaOnSuccessInDoDelete": "Defines whether to delete the source file on success after the transmission.",
  "/subscriptions/{id}[type=SiteMailbox].postTransmissionActions.ptaOnSuccessInDoMove": "Specify a value to rename the file after transmission or move it to a different folder on success. An expression language can be used to specify a file name/folder.",
  "/subscriptions/{id}[type=SiteMailbox].postTransmissionActions.ptaOnSuccessOutDoDelete": "Defines whether to delete the file on success after the transmission.",
  "/subscriptions/{id}[type=SiteMailbox].postTransmissionActions.ptaOnSuccessOutDoMove": "Specify a value to rename the file after transmission or move it to a different folder on success. An expression language can be used to specify a file name/folder.",
  "/subscriptions/{id}[type=SiteMailbox].postTransmissionActions.ptaOnTempfailInDoDelete": "Defines whether to delete the file on failure after the transmission.",
  "/subscriptions/{id}[type=SiteMailbox].postTransmissionActions.ptaOnTempfailInDoMove": "Specify a value to rename the file after transmission or move it to a different folder on temporary failure. An expression language can be used to specify a file name/folder.",
  "/subscriptions/{id}[type=SiteMailbox].scheduledFolderMonitor": "Specify if this subscription is targeted for a scheduled folder monitor.",
  "/subscriptions/{id}[type=SiteMailbox].subscriptionEncryptMode": "Encryption that will be used for subscription folder. Accepting one of default, enabled, disabled.",
  "/subscriptions/{id}[type=SiteMailbox].templateAdvancedExpression": "Specify if advanced expressions section be displayed in Admin UI Subscriptions page.",
  "/subscriptions/{id}[type=SiteMailbox].type": "\u003cnil\u003e",
  "/subscriptions/{id}[type=StandardRouter].account": "The account of the subscription",
  "/subscriptions/{id}[type=StandardRouter].application": "The application of the subscription",
  "/subscriptions/{id}[type=StandardRouter].fileRetentionPeriod": "Specify the retention period of the pulled files. Must be non-negative integer between 0 and 36500.",
  "/subscriptions/{id}[type=StandardRouter].flowAttributes": "Flow attributes which are defined with \"key\": \"value\" pairs. Keys must start with \"userVars.\" prefix, follow the pattern: [a-zA-Z0-9_.]+\nand have length between 10 and 255 characters (including the prefix). Non prefixed part of key should not start with \"userVars.\", since it is\na reserved word. Both key and value cannot be blank.\n",
  "/subscriptions/{id}[type=StandardRouter].flowAttrsMergeMode": "The flow merge mode",
  "/subscriptions/{id}[type=StandardRouter].flowName": "Name of the CG flow",
  "/subscriptions/{id}[type=StandardRouter].folder": "The folder of the subscription",
  "/subscriptions/{id}[type=StandardRouter].folderMonitorScheduleCheck": "Whether a folder monitor subscription is scheduled.",
  "/subscriptions/{id}[type=StandardRouter].id": "The id of the subscription",
  "/subscriptions/{id}[type=StandardRouter].maxParallelSitPulls": "Custom attribute under which we store the option for maximum sit pulls to be executed simultaneously. Negative value or 0 - no limit, positive value 4 - limits simultaneously",
  "/subscriptions/{id}[type=StandardRouter].postTransmissionActions.ptaOnPermfailInDoDelete": "Defines whether to delete the file on failure after the transmission.",
  "/subscriptions/{id}[type=StandardRouter].postTransmissionActions.ptaOnPermfailInDoMove": "Specify a value to rename the file after transmission or move it to a different folder on failure. An expression language can be used to specify a file name/folder.",
  "/subscriptions/{id}[type=StandardRouter].postTransmissionActions.ptaOnPermfailOutDoDelete": "Defines whether to delete the file on failure after the transmission.",
  "/subscriptions/{id}[type=StandardRouter].postTransmissionActions.ptaOnPermfailOutDoMove": "Specify a value to rename the file after transmission or move it to a different folder on failure. An expression language can be used to specify a file name/folder.",
  "/subscriptions/{id}[type=StandardRouter].postTransmissionActions.ptaOnSuccessInDoDelete": "Defines whether to delete the source file on success after the transmission.",
  "/subscriptions/{id}[type=StandardRouter].postTransmissionActions.ptaOnSuccessInDoMove": "Specify a value to rename the file after transmission or move it to a different folder on success. An expression language can be used to specify a file name/folder.",
  "/subscriptions/{id}[type=StandardRouter].postTransmissionActions.ptaOnSuccessOutDoDelete": "Defines whether to delete the file on success after the transmission.",
  "/subscriptions/{id}[type=StandardRouter].postTransmissionActions.ptaOnSuccessOutDoMove": "Specify a value to rename the file after transmission or move it to a different folder on success. An expression language can be used to specify a file name/folder.",
  "/subscriptions/{id}[type=StandardRouter].postTransmissionActions.ptaOnTempfailInDoDelete": "Defines whether to delete the file on failure after the transmission.",
  "/subscriptions/{id}[type=StandardRouter].postTransmissionActions.ptaOnTempfailInDoMove": "Specify a value to rename the file after transmission or move it to a different folder on temporary failure. An expression language can be used to specify a file name/folder.",
  "/subscriptions/{id}[type=StandardRouter].scheduledFolderMonitor": "Specify if this subscription is targeted for a scheduled folder monitor.",
  "/subscriptions/{id}[type=StandardRouter].subscriberID": "The subscriber ID.",
  "/subscriptions/{id}[type=StandardRouter].subscriptionEncryptMode": "Encryption that will be used for subscription folder. Accepting one of default, enabled, disabled.",
  "/subscriptions/{id}[type=StandardRouter].type": "\u003cnil\u003e",
  "/transferProfiles/{id}.account": "The account for which the transfer profile is created.",
  "/transferProfiles/{id}.additionalAttributes": "Additional attributes which are defined with \"key\": \"value\" pairs. Keys must start with \"userVars.\" prefix, follow the pattern: [a-zA-Z0-9_.]+\nand have length between 10 and 255 characters (including the prefix). Non prefixed part of key should not start with \"userVars.\", since it is\na reserved word. Both key and value cannot be blank.\n",
  "/transferProfiles/{id}.default": "Defines whether this transfer profile is default or not.",
  "/transferProfiles/{id}.fileLabelOption": "Determines whether the file name and the path, relative to the account's home folder, are sent. Corresponds to PI 37.",
  "/transferProfiles/{id}.id": "The id of the transfer profile.",
  "/transferProfiles/{id}.multiSelect": "Determines the files to retrieve - all files that match the specified pattern (true) or just the first one (false).",
  "/transferProfiles/{id}.name": "The name of the transfer profile.",
  "/transferProfiles/{id}.paddingStripEnabled": "Enables/disables padding character removal. Can be used only when advancedSettings.enabled is false.",
  "/transferProfiles/{id}.receiveMapping": "Determines the name of the received file. It is either a file name or an expression language pattern. The expression must not contain '*' or '?'.",
  "/transferProfiles/{id}.recordFormat": "Sets the record format of the transferred file. Can be used only when advancedSettings.enabled is false.",
  "/transferProfiles/{id}.recordLength": "Sets the record length of the transferred file. It must be a positive integer. Can be used only when advancedSettings.enabled is false.",
  "/transferProfiles/{id}.sendMapping": "Determines the files to send. It is either a file name (for Client Initiated Transfers only), a wildcard pattern or an EL expression.",
  "/transferProfiles/{id}.sendingAcknowledgmentEnabled": "If set to true, SecureTransport automatically acknowledges the transfer after its processing completes successfully.",
  "/transferProfiles/{id}.transferMode": "The transfer mode used when advancedSettings.enabled is false.",
  "/userClasses/{id}.address": "User class host.",
  "/userClasses/{id}.className": "User class name.",
  "/userClasses/{id}.enabled": "Is user class currently enabled.",
  "/userClasses/{id}.expression": "User class expression.",
  "/userClasses/{id}.group": "Group of user class",
  "/userClasses/{id}.id": "The id of the user class.",
  "/userClasses/{id}.order": "The order in which user class is saved in database",
  "/userClasses/{id}.userName": "User class username.",
  "/userClasses/{id}.userType": "User class type."
}